{
	"info": {
		"_postman_id": "51a547cf-0c32-4489-a736-bea454cffd7c",
		"name": "Test2024C",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "39095925"
	},
	"item": [
		{
			"name": "addUser",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var randomEmail = \"qweerty\" + Math.floor(Math.random() * 100000) + \"@mail.com\";\r",
							"pm.collectionVariables.set(\"email\", randomEmail);\r",
							"\r",
							"var randomDateBirth = Math.floor((Math.random() * 100) + 1950);\r",
							"pm.collectionVariables.set(\"dateBirth\", randomDateBirth);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Check user creation\", function () {   \r",
							"    pm.expect(jsonData.status).to.eql(\"ok\");    \r",
							"    pm.collectionVariables.set(\"userId\", jsonData.data.userId);\r",
							"});\r",
							"\r",
							"//console.log(jsonData.data.userId);\r",
							"\r",
							"pm.test(\"Check email \", function () {      \r",
							"    pm.collectionVariables.set(\"email\", jsonData.data.email);\r",
							"    \r",
							"});\r",
							"\r",
							"pm.test(\"Check lastName \", function () {      \r",
							"    pm.collectionVariables.set(\"lastName\", jsonData.data.lastName);\r",
							"});\r",
							"\r",
							"var schema1 = pm.collectionVariables.get(\"schema_JSON\")\r",
							"pm.test('Schema is valid', function () {\r",
							"pm.expect(tv4.validate(pm.response.json(), JSON.parse(schema1))).to.be.true;\r",
							"});\r",
							"\r",
							"pm.test(\"Your test email\", function () {\r",
							"var jsonData = JSON.parse(pm.request.body.raw)\r",
							"pm.expect(jsonData.email).to.match(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/);\r",
							"});\r",
							"\r",
							"pm.test(\"Your test dateBirth\", function () {\r",
							"var jsonData = JSON.parse(pm.request.body.raw)\r",
							"pm.expect(jsonData.dateBirth).to.match(/[0-9\\\\.,:]/);\r",
							"});\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {}
			},
			"request": {
				"auth": {
					"type": "noauth"
				},
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"name\":\"John\",\r\n  \"lastName\":\"Dou\",\r\n  \"email\":\"{{email}}\",\r\n  \"password\":\"{{password}}\",\r\n  \"repeatPassword\":\"{{password}}\",\r\n  \"dateBirth\":\"{{dateBirth}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth/signup",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Changes user's password",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let oldPassword = pm.collectionVariables.get(\"password\");\r",
							"let newPassword = oldPassword + 1;\r",
							"pm.collectionVariables.set(\"newPassword\", newPassword);\r",
							"\r",
							"\r",
							"\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"\r",
							"\r",
							"pm.test(\"Check userId\", function () {  \r",
							" pm.collectionVariables.set(\"userId\", jsonData.data.userId);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"oldPassword\": \"{{password}}\",\r\n  \"password\": \"{{newPassword}}\",\r\n  \"repeatPassword\": \"{{newPassword}}\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/users/password",
					"host": [
						"{{url}}"
					],
					"path": [
						"users",
						"password"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://qauto2.forstudy.space/api/auth/logout",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"auth",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Deletes user's account and current user session",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://qauto2.forstudy.space/api/users",
					"protocol": "https",
					"host": [
						"qauto2",
						"forstudy",
						"space"
					],
					"path": [
						"api",
						"users"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creates new car Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							" var jsonData = pm.response.json();   \r",
							"pm.test(\"Add Audi TT\", function () {          \r",
							"    pm.expect(jsonData.data.brand).to.eql(\"Audi\");\r",
							"});\r",
							"pm.collectionVariables.set(\"carId\", jsonData.data.id);"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"mileage\", 1);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carBrandId\": 1,\r\n  \"carModelId\": 1,\r\n  \"mileage\":{{mileage}}\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/cars",
					"host": [
						"{{url}}"
					],
					"path": [
						"cars"
					]
				}
			},
			"response": []
		},
		{
			"name": "Creates an expense Copy",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let day = new Date();\r",
							"let fullDate = day.getFullYear() + \"-\" +(day.getMonth() + 1) + \"-\" + day.getDate()\r",
							"pm.collectionVariables.set(\"fullDate\", fullDate);\r",
							"\r",
							"let newMilage = pm.collectionVariables.get(\"mileage\") + 1;\r",
							"pm.collectionVariables.set(\"newMilage\", newMilage);\r",
							"pm.collectionVariables.set(\"mileage\", newMilage);\r",
							"\r",
							"let newCost = pm.collectionVariables.get(\"totalCost\") + Math.floor((Math.random() * 100));\r",
							"console.log(newCost);\r",
							"pm.collectionVariables.set(\"totalCost\", newCost);\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json();\r",
							"pm.collectionVariables.set(\"expensesId\",jsonData.data.id)\r",
							"pm.test(\"Check user creation\", function () {   \r",
							"    pm.expect(jsonData.status).to.eql(\"ok\");\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n  \"carId\": {{carId}},\r\n  \"reportedAt\": \"{{fullDate}}\",\r\n  \"mileage\": {{newMilage}},\r\n  \"liters\": 11,\r\n  \"totalCost\": {{totalCost}},\r\n  \"forceMileage\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/expenses",
					"host": [
						"{{url}}"
					],
					"path": [
						"expenses"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					"const schema = {\r",
					" \"$schema\": \"http://json-schema.org/draft-04/schema#\",\r",
					"\"type\": \"object\",\r",
					"\"properties\": {\r",
					"\"status\": {\r",
					"\"type\": \"string\"\r",
					"},\r",
					"\"data\": {\r",
					"\"type\": \"object\",\r",
					"\"properties\": {\r",
					"\"userId\": {\r",
					"\"type\": \"integer\"\r",
					"},\r",
					"\"photoFilename\": {\r",
					"\"type\": \"string\"\r",
					"},\r",
					"\"distanceUnits\": {\r",
					"\"type\": \"string\"\r",
					"},\r",
					"\"currency\": {\r",
					"\"type\": \"string\"\r",
					"}\r",
					"},\r",
					"\"required\": [\r",
					"\"userId\",\r",
					"\"photoFilename\",\r",
					"\"distanceUnits\",\r",
					"\"currency\"\r",
					"]\r",
					"}\r",
					"},\r",
					"\"required\": [\r",
					"\"status\",\r",
					"\"data\"\r",
					"]\r",
					"\r",
					"    };\r",
					"\r",
					"pm.collectionVariables.set(\"schema_JSON\", JSON.stringify(schema));\r",
					"\r",
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"packages": {},
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://qauto.forstudy.space/api",
			"type": "string"
		},
		{
			"key": "schema_JSON",
			"value": "schema_JSON",
			"type": "string"
		},
		{
			"key": "password",
			"value": "Test12345678",
			"type": "string"
		},
		{
			"key": "userId",
			"value": "",
			"type": "string"
		},
		{
			"key": "email",
			"value": ""
		},
		{
			"key": "newPassword",
			"value": "",
			"type": "string"
		},
		{
			"key": "lastName",
			"value": "",
			"type": "string"
		},
		{
			"key": "required",
			"value": "required",
			"type": "string"
		},
		{
			"key": "photoFilename",
			"value": "photoFilename",
			"type": "string"
		},
		{
			"key": "distanceUnits",
			"value": "distanceUnits",
			"type": "string"
		},
		{
			"key": "currency",
			"value": "currency",
			"type": "string"
		},
		{
			"key": "dateBirth",
			"value": ""
		},
		{
			"key": "costs",
			"value": ""
		},
		{
			"key": "$costs",
			"value": "",
			"type": "default"
		},
		{
			"key": "cost",
			"value": ""
		},
		{
			"key": "price",
			"value": ""
		},
		{
			"key": "mileage",
			"value": ""
		},
		{
			"key": "carId",
			"value": ""
		},
		{
			"key": "fullDate",
			"value": ""
		},
		{
			"key": "newMilage",
			"value": ""
		},
		{
			"key": "expensesId",
			"value": ""
		},
		{
			"key": "totalCost",
			"value": ""
		}
	]
}